name: Test

on:
  workflow_call:

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'
  CONTAINER_RUNTIME: 'docker'

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: "3.11"
            image_tag: "nightly"
            pulp_api_root: "/relocated/djnd/"
          - python: "3.11"
            image_tag: "latest"
          - python: "3.6"
            image_tag: "3.28"
          - python: "3.7"
            image_tag: "3.23"
            lower_bounds: true
          - python: "3.8"
            image_tag: "3.22"
          - python: "3.9"
            image_tag: "3.21"
            pulp_api_root: "/relocated/djnd/"
          - python: "3.10"
            image_tag: "3.18"
            lower_bounds: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/*constraints.lock', '**/setup.py', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "Download wheels"
        uses: "actions/download-artifact@v4"
        with:
          name: "pulp_cli_packages"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Test Dependencies
        run: |
          if [ "${{matrix.lower_bounds}}" ]
          then
            pip install dist/pulp_cli-*.whl pulp-glue/dist/pulp_glue-*.whl -r test_requirements.txt -c lower_bounds_constraints.lock
          else
            pip install dist/pulp_cli-*.whl pulp-glue/dist/pulp_glue-*.whl -r test_requirements.txt
          fi
      - name: Run tests
        env:
          CONTAINER_RUNTIME: ${{ matrix.container_runtime }}
          IMAGE_TAG: ${{ matrix.image_tag }}
          FROM_TAG: ${{ matrix.from_tag }}
          CONTAINER_FILE: ${{ matrix.container_file }}
          PULP_API_ROOT: ${{ matrix.pulp_api_root }}
        run: .ci/run_container.sh make test
