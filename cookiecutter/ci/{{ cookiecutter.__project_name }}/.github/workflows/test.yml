---
name: "Test"

on:
  workflow_call:

env:
  COLORTERM: "yes"
  TERM: "xterm-256color"
  PYTEST_ADDOPTS: "--color=yes"
  CONTAINER_RUNTIME: "docker"

jobs:
  {%- if cookiecutter.unittests %}
  unittest:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v5"
      {%- include "cache_action" %}
      - name: "Download wheels"
        uses: "actions/download-artifact@v5"
        with:
          name: "pulp_cli_packages"
      - name: "Set up Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.12"
      - name: "Install Python Test Dependencies"
        run: |
          pip install dist/pulp_cli{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- if cookiecutter.glue %} pulp-glue{{ cookiecutter.__app_label_suffix }}/dist/pulp_glue{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- endif %} -r test_requirements.txt
      - name: "Run tests"
        run: |
          make unittest
  {%- endif %}
  test:
    runs-on: "ubuntu-24.04"
    {%- if cookiecutter.unittests %}
    needs:
      - "unittest"
    {%- endif %}
    strategy:
      fail-fast: false
      matrix:{{ cookiecutter.test_matrix | jaml(level=4, embed_in="dict") }}
    steps:
      - uses: "actions/checkout@v5"
      {%- include "cache_action" %}
      - name: "Download wheels"
        uses: "actions/download-artifact@v5"
        with:
          name: "pulp_cli_packages"
      - name: "Set up Python"
        uses: "actions/setup-python@v5"
        with:
          {%- raw %}
          python-version: "${{ matrix.python }}"
          {%- endraw %}
          allow-prereleases: true
      {%- if cookiecutter.binary_dependencies %}
      - name: "Install Binary Test Dependencies"
        run: |
          sudo apt-get install {{ cookiecutter.binary_dependencies }}
      {%- endif %}
      - name: "Install Python Test Dependencies"
        run: |
          if [ "{{ "${{matrix.lower_bounds}}" }}" ]
          then
            pip install dist/pulp_cli{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- if cookiecutter.glue %} pulp-glue{{ cookiecutter.__app_label_suffix }}/dist/pulp_glue{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- endif %} -r test_requirements.txt -c lower_bounds_constraints.lock
          elif [ "{{ "${{matrix.upper_bounds}}" }}" ]
          then
            .ci/scripts/calc_constraints.py pyproject.toml {%- if cookiecutter.glue %} pulp-glue{{ cookiecutter.__app_label_suffix }}/pyproject.toml {%- endif %}  --upper > upper_bounds_constraints.lock
            pip install dist/pulp_cli{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- if cookiecutter.glue %} pulp-glue{{ cookiecutter.__app_label_suffix }}/dist/pulp_glue{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- endif %} -r test_requirements.txt -c upper_bounds_constraints.lock
          else
            pip install dist/pulp_cli{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- if cookiecutter.glue %} pulp-glue{{ cookiecutter.__app_label_suffix }}/dist/pulp_glue{{ cookiecutter.__app_label_suffix | replace("-", "_") }}-*.whl {%- endif %} -r test_requirements.txt
          fi
      - name: "Run tests"
        env:
          {%- raw %}
          CONTAINER_RUNTIME: "${{ matrix.container_runtime }}"
          IMAGE_TAG: "${{ matrix.image_tag }}"
          FROM_TAG: "${{ matrix.from_tag }}"
          CONTAINER_FILE: "${{ matrix.container_file }}"
          PULP_HTTPS: "${{ matrix.pulp_https }}"
          PULP_OAUTH2: "${{ matrix.pulp_oauth2 }}"
          PULP_API_ROOT: "${{ matrix.pulp_api_root }}"
          PULP_DOMAIN_ENABLED: "${{ matrix.pulp_domain_enabled }}"
          PULP_ENABLED_PLUGINS: "${{ matrix.pulp_enabled_plugins }}"
          OAS_VERSION: "${{ matrix.oas_version }}"
          {%- endraw %}
        run: |
          .ci/run_container.sh make {% if cookiecutter.unittests %}live{% endif %}test
...
