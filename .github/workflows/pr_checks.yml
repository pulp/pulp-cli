---
name: "Pulp CLI PR static checks"
on:
  pull_request_target:
    types: ["opened", "synchronize", "reopened"]

# This workflow runs with elevated permissions.
# Do not even think about running a single bit of code from the PR.
# Static analysis should be fine however.

concurrency:
  group: "${{ github.event.pull_request.number }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  single_commit:
    runs-on: "ubuntu-latest"
    name: "Label multiple commit PR"
    permissions:
      pull-requests: "write"
    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - uses: "actions/setup-python@v5"
        with:
          python_version: "3.12"
      - name: "Determine PR labels"
        run: |
          git fetch origin ${{ github.event.pull_request.head.sha }}
          python .ci/scripts/pr_labels.py "origin/${{ github.base_ref }}" "${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
      - uses: "actions/github-script@v7"
        name: "Apply PR Labels"
        with:
          script: |
            const { ADD_LABELS, REMOVE_LABELS } = process.env;

            const addLables = ADD_LABELS.split(",");
            const removeLables = REMOVE_LABELS.split(",");

            removeLabels.map((labelName) => {
              try {
                await github.rest.issues.removeLabel({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: labelName,
                });
              } catch(err) {
              }
            }
            addLabels.map((labelName) => {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: [labelName],
              });
            }
