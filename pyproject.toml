[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools<81"]

[project]
authors = [
  {name = "Pulp Team", email = "pulp-list@redhat.com"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: System :: Software Distribution",
  "Typing :: Typed",
]
dependencies = [
  "pulp-glue==0.37.0.dev",
  "click>=8.0.0,<8.3", # Proven to not do semver.
  "PyYAML>=5.3,<6.1",
  "schema>=0.7.5,<0.8",
  "tomli>=2.0.0,<2.1;python_version<'3.11'",
  "tomli-w>=1.0.0,<2",
  "importlib_metadata>=4.8.0,<7.1;python_version<'3.10'",
]
description = "Command line interface to talk to pulpcore's REST API."
license = {text = "GPLv2+"}
name = "pulp-cli"
readme = "README.md"
requires-python = ">=3.9,<3.15"
version = "0.37.0.dev"

[project.optional-dependencies]
password-manager = ["SecretStorage>=3.3.3,<3.4"]
pygments = ["pygments>=2.17.2,<2.20"]
shell = ["click-shell>=2.1,<3.0"]

[project.urls]
changelog = "https://pulpproject.org/pulp-cli/changes/"
documentation = "https://pulpproject.org/pulp-cli/"
repository = "https://github.com/pulp/pulp-cli"

[project.scripts]
pulp = "pulp_cli:main"

[project.entry-points."pulp_cli.plugins"]
ansible = "pulpcore.cli.ansible"
common = "pulpcore.cli.common"
container = "pulpcore.cli.container"
core = "pulpcore.cli.core"
file = "pulpcore.cli.file"
python = "pulpcore.cli.python"
rpm = "pulpcore.cli.rpm"

[tool.setuptools.packages.find]
# This section is managed by the cookiecutter templates.
include = ["pulpcore.cli.*", "pulp_cli", "pytest_pulp_cli"]
namespaces = true
where = ["."]

[tool.setuptools.package-data]
# This section is managed by the cookiecutter templates.
"*" = ["py.typed", "locale/*/LC_MESSAGES/*.mo"]

[tool.pulp_cli_template]
# This section is co-managed by the cookiecutter templates.
# Changes to existing keys should be preserved.
app_label = ""
binary_dependencies = ""
docs = true
glue = true
main_package = "common"
repository = "https://github.com/pulp/pulp-cli"
translations = true
unittests = true

[tool.bumpversion]
# This section is managed by the cookiecutter templates.
commit = false
current_version = "0.37.0.dev"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<release>[a-z]+))?"
serialize = [
  "{major}.{minor}.{patch}.{release}",
  "{major}.{minor}.{patch}",
]
tag = false

[tool.bumpversion.parts.release]
# This section is managed by the cookiecutter templates.
optional_value = "prod"
values = [
  "dev",
  "prod",
]

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp_cli/__init__.py"
replace = "__version__ = \"{new_version}\""
search = "__version__ = \"{current_version}\""

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp-glue/pulp_glue/common/__init__.py"
replace = "__version__ = \"{new_version}\""
search = "__version__ = \"{current_version}\""

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulpcore/cli/common/__init__.py"
replace = "__version__ = \"{new_version}\""
search = "__version__ = \"{current_version}\""

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp-glue/pyproject.toml"
replace = "version = \"{new_version}\""
search = "version = \"{current_version}\""

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pyproject.toml"
replace = "version = \"{new_version}\""
search = "version = \"{current_version}\""

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pyproject.toml"
replace = "\"pulp-glue=={new_version}\""
search = "\"pulp-glue=={current_version}\""

[tool.towncrier]
# This section is managed by the cookiecutter templates.
directory = "CHANGES/"
filename = "CHANGES.md"
issue_format = "[#{issue}](https://github.com/pulp/pulp-cli/issues/{issue})"
start_string = "[//]: # (towncrier release notes start)\n"
template = "CHANGES/.TEMPLATE.md"
title_format = "## {version} ({project_date}) {{: #{version} }}"
underlines = ["", "", ""]

[[tool.towncrier.section]]
# This section is managed by the cookiecutter templates.
name = ""
path = ""

[[tool.towncrier.section]]
# This section is managed by the cookiecutter templates.
name = "Pulp GLUE"
path = "pulp-glue"

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "translation"
name = "Translations"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "devel"
name = "Developer Notes"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "misc"
name = "Misc"
showcontent = true

[tool.black]
# This section is managed by the cookiecutter templates.
exclude = "cookiecutter"
line-length = 100

[tool.isort]
# This section is managed by the cookiecutter templates.
extend_skip = ["pulp-glue", "cookiecutter"]
line_length = 100
profile = "black"

[tool.flake8]
# This section is managed by the cookiecutter templates.
exclude = ["./docs/*", "./cookiecutter/*"]
ignore = ["W503", "Q000", "Q003", "D100", "D104", "D106", "D200", "D202", "D205", "D400", "D401", "D402"]
# E203: whitespace before ':'; https://github.com/psf/black/issues/279
# E401: multiple imports on one line
extend-ignore = ["E203", "E401"]
max-line-length = 100

[tool.pytest.ini_options]
markers = [
  "live: integration tests that run against a live server",
  "glue: tests for pulp-glue in isolation",
  "script: tests provided as shell scripts",
  "help_page: tests that render help pages",
  "pulpcore: pulpcore tests",
  "pulp_file: pulp_file tests",
  "pulp_ansible: pulp_ansible tests",
  "pulp_container: pulp_container tests",
  "pulp_rpm: pulp_rpm tests",
  "pulp_python: pulp_python tests",
]

[tool.mypy]
# This section is managed by the cookiecutter templates.
explicit_package_bases = true
files = "pulpcore/**/*.py, tests/*.py, pulp_cli/**/*.py, pytest_pulp_cli/**/*.py"
namespace_packages = true
show_error_codes = true
strict = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
# This section is managed by the cookiecutter templates.
ignore_missing_imports = true
module = [
  "click_shell.*",
  "gnupg.*",
  "IPython.*",
  "schema.*",
]
