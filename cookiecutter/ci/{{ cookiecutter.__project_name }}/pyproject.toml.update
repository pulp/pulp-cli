{#
  This file is not templated for itself, but it is used to update sections in pyproject.toml.
#}

[tool.setuptools.packages.find]
# This section is managed by the cookiecutter templates.
where = ["."]
include = ["pulpcore.cli.*"{% if cookiecutter.app_label == "" %}, "pulp_cli", "pytest_pulp_cli"{% endif %}]
namespaces = true

[tool.setuptools.package-data]
# This section is managed by the cookiecutter templates.
"*" = ["py.typed"{% if cookiecutter.translations %}, "locale/*/LC_MESSAGES/*.mo"{% endif %}]

[tool.pulp_cli_template]
# This section is co-managed by the cookiecutter templates.
# Changes to existing keys should be preserved.
app_label = {{ cookiecutter.app_label | to_toml_value }}
repository = {{ cookiecutter.repository | to_toml_value }}
glue = {{ cookiecutter.glue | to_toml_value }}
docs = {{ cookiecutter.docs | to_toml_value }}
translations = {{ cookiecutter.translations | to_toml_value }}
main_package = {{ cookiecutter.main_package | to_toml_value }}
binary_dependencies = {{ cookiecutter.binary_dependencies | to_toml_value }}

[tool.bumpversion]
# This section is managed by the cookiecutter templates.
current_version = "{{ cookiecutter.current_version }}"
commit = false
tag = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<release>[a-z]+))?"
serialize = [
  "{major}.{minor}.{patch}.{release}",
  "{major}.{minor}.{patch}",
]

[tool.bumpversion.parts.release]
# This section is managed by the cookiecutter templates.
optional_value = "prod"
values = [
  "dev",
  "prod",
]
{%- if cookiecutter.app_label == "" %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp_cli/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""
{%- endif %}
{%- if cookiecutter.glue %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp-glue{{ cookiecutter.__app_label_suffix }}/pulp_glue/{{ cookiecutter.main_package }}/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""
{%- endif %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulpcore/cli/{{ cookiecutter.main_package }}/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""
{%- if cookiecutter.glue %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pulp-glue{{ cookiecutter.__app_label_suffix }}/pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
{%- endif %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
{%- if cookiecutter.glue %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./pyproject.toml"
search = "\"pulp-glue{{ cookiecutter.__app_label_suffix }}=={current_version}\""
replace = "\"pulp-glue{{ cookiecutter.__app_label_suffix }}=={new_version}\""
{%- endif %}
{%- if cookiecutter.docs %}

[[tool.bumpversion.files]]
# This section is managed by the cookiecutter templates.
filename = "./mkdocs.yml"
search = "version: \"{current_version}\""
replace = "version: \"{new_version}\""
{%- endif %}

[tool.towncrier]
# This section is managed by the cookiecutter templates.
filename = "CHANGES.md"
directory = "CHANGES/"
title_format = "## {version} ({project_date}) {{ "{{: #{version} }}" }}"
template = "CHANGES/.TEMPLATE.md"
issue_format = "[#{issue}]({{ cookiecutter.repository }}/issues/{issue})"
start_string = "[//]: # (towncrier release notes start)\n"
underlines = ["", "", ""]

[[tool.towncrier.section]]
# This section is managed by the cookiecutter templates.
path = ""
name = ""
{%- if cookiecutter.glue %}

[[tool.towncrier.section]]
# This section is managed by the cookiecutter templates.
path = "pulp-glue{{ cookiecutter.__app_label_suffix}}"
name = "Pulp{{ cookiecutter.__app_label_suffix}} GLUE"
{%- endif %}

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "bugfix"
name = "Bugfixes"
showcontent = true
{%- if cookiecutter.docs %}

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "doc"
name = "Improved Documentation"
showcontent = true
{%- endif %}

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "removal"
name = "Deprecations and Removals"
showcontent = true
{%- if cookiecutter.translations %}

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "translation"
name = "Translations"
showcontent = true
{%- endif %}

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "devel"
name = "Developer Notes"
showcontent = true

[[tool.towncrier.type]]
# This section is managed by the cookiecutter templates.
directory = "misc"
name = "Misc"
showcontent = false

[tool.black]
# This section is managed by the cookiecutter templates.
line-length = 100
{%- if cookiecutter.app_label == "" %}
exclude = "cookiecutter"
{%- endif %}

[tool.isort]
# This section is managed by the cookiecutter templates.
profile = "black"
line_length = 100
skip = ["pulp-glue{{ cookiecutter.__app_label_suffix }}"{% if cookiecutter.app_label == "" %}, "cookiecutter"{% endif %}]

[tool.flake8]
# This section is managed by the cookiecutter templates.
exclude = ["./docs/*"{% if cookiecutter.app_label == "" %}, "./cookiecutter/*"{% endif %}]
ignore = ["W503", "Q000", "Q003", "D100", "D104", "D106", "D200", "D202", "D205", "D400", "D401", "D402"]
# E203: whitespace before ':'; https://github.com/psf/black/issues/279
# E401: multiple imports on one line
extend-ignore = ["E203", "E401"]
max-line-length = 100

[tool.mypy]
# This section is managed by the cookiecutter templates.
strict = true
warn_unused_ignores = false
show_error_codes = true
files = "pulpcore/**/*.py, tests/*.py{% if cookiecutter.app_label == "" %}, pulp_cli/**/*.py, pytest_pulp_cli/**/*.py{% endif %}"
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
# This section is managed by the cookiecutter templates.
module = [
  "click_shell.*",
  "gnupg.*",
  "IPython.*",
  "schema.*",
]
ignore_missing_imports = true
